git svn clone --stdlayout --authors-file=authors.txt svn-url

git remote add origin https://janAdamczyk:pw@bitbucket.org/company/project.git

####tags
git for-each-ref --format="%(refname:short) %(objectname)" refs/remotes/origin/tags \
| while read BRANCH REF
  do
        TAG_NAME=${BRANCH#*/}
        BODY="$(git log -1 --format=format:%B $REF)"

        echo "ref=$REF parent=$(git rev-parse $REF^) tagname=$TAG_NAME body=$BODY" >&2

        git tag -a -m "$BODY" $TAG_NAME $REF^  &&\
        git branch -r -d $BRANCH
  done

###branches
for b in $(git for-each-ref --format='%(refname:short)' refs/remotes); do git branch $b refs/remotes/$b && git branch -D -r $b; done

###remove branches@version
for p in $(git for-each-ref --format='%(refname:short)' | grep @); do git branch -D $p; done
###remove tag@version
for p in $(git for-each-ref --format='%(refname:short)' | grep @); do git tag -d $p; done

##remove trunk
git branch -d origin/trunk

git push --all
git push --tags


#####################################################################################
### If already remote:

###remote delete branch
for p in $(git for-each-ref --format='%(refname:short)' | grep @ | cut -d / -f 2-); do git push origin --delete $p; done
###remote delete tags
for p in $(git for-each-ref --format='%(refname:short)' | grep @); do git push origin :refs/tags/$p; done


######################################################################################


#######################################################
### RENAMING BRANCHES ###################
#checkout all branches locally
for i in `git branch -a | grep remote | grep -v HEAD | grep -v master`; do git branch --track ${i#remotes/origin/} $i; done



# check before rename branches
git branch | grep "origin/" | awk '{original=$1; sub("origin/",""); print original, "->" , $1}'

#rename branches
git branch | grep "origin/" | awk '{original=$1; sub("origin/",""); print original, $1}' | xargs -n 2 git branch -m

#show all branches
git branch -a

# save password in project
git config credential.helper store

#delete remote branches
for p in $((git for-each-ref --format='%(refname:short)' | grep 'origin/origin') | cut -d / -f 2-); do git push origin --delete $p; done

#push local branches
git push --all
###################################################################################
